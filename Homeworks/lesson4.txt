Задания:
1) У вас есть список my_list с значениями типа int.
Распечатать те значения, которые больше 100.
Задание выполнить с помощью цикла for.

2) У вас есть список my_list с значениями типа int, и пустой список my_results.
Добавить в my_results те значения, которые больше 100.
Распечатать список my_results.
Задание выполнить с помощью цикла for.

3) У вас есть список my_list с значениями типа int.
Если в my_list количество элементов меньше 2, то в конец добавить значение 0.
Если количество элементов больше или равно 2, то добавить сумму последних двух элементов.
Количество элементов в списке можно получить с помощью функции len(my_list)

4) Пользователь вводит value - число с запятой (например 3.14) с клавиатуры.
Вы приводите это value к типу float и выводите результат выражения value ** -1.
Написать программу, которая вычисляет данное выражение и
корректно обрабатывает возможные исключения.

5) У вас есть список my_list с значениями типа int, и пустой список my_results.
Добавить в my_results те значения из my_list для которых сумма индекса и значения будет четной.
Пример. [1,11,20,100]
Ответ [11, 20], потому что индекс 1 + значение 11 это 12 - четное, индекс 2 + значение 20 это 22 - четное

6) У вас есть два списка my_list_1 и my_list_2 равной длинны.
Распечатать пары значений из my_list_1 и my_list_2 через обращение по индексу (можно range, можно enumerate).
Например для списков [1, 3] и [2, 4]:
(1, 2)
(3, 4)

#####################################################
Еще один пример - вложенные циклы (цикл в цикле).
my_string_1 = "12"
my_string_2 = "34"
for symb_1 in my_string_1:
	for symb_2 in my_string_2:
		print(symb_1 + symb_2)



Результат:
"13"	# перебирается все элементы из my_string_2 для элемента "1" из my_string_1
"14"
"23"	# перебирается все элементы из my_string_2 для элемента "2" из my_string_1
"24"
#####################################################

7) У вас есть строка my_string = '0123456789'.
Сгенерировать целые числа (тип int) от 0 до 99 и поместить их в список.
Задание нужно выполнить ТОЛЬКО через цикл в цикле(См. пример выше) и приведение типов .
Генерирование через range или другие "фишки" я засчитывать не буду ))